version: '3.8'

services:
  # Caddy Reverse Proxy (HTTPS)
  caddy:
    image: caddy:2-alpine
    container_name: beermachine_caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp" # HTTP/3 support
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - beermachine-network
    depends_on:
      - frontend
    environment:
      - DOMAIN=${DOMAIN:-localhost}
    labels:
      # Labels for future Traefik migration
      - "app.service=reverse-proxy"
      - "app.environment=${NODE_ENV:-production}"

  # PostgreSQL Database (Production)
  postgres:
    image: postgres:15-alpine
    container_name: beermachine_prod_db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - "5432"
    networks:
      - beermachine-network
    restart: unless-stopped
    labels:
      - "app.service=database"
      - "app.environment=${NODE_ENV:-production}"

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: beermachine_backend
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: ${BEPORT}
      JWT_SECRET: ${JWT_SECRET}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      FEURL: ${FEURL}
      FEPORT: ${FEPORT}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - postgres
    expose:
      - "${BEPORT}"
    networks:
      - beermachine-network
    restart: unless-stopped
    volumes:
      - ./backend/uploads:/app/uploads
    labels:
      # Labels for future Traefik migration
      - "app.service=backend"
      - "app.subdomain=api"
      - "app.port=${BEPORT}"
      - "app.environment=${NODE_ENV:-production}"

  # Frontend Web App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: ${BEURL}
        VITE_API_PORT: ${BEPORT}
    container_name: beermachine_frontend
    depends_on:
      - backend
    expose:
      - "80"
    networks:
      - beermachine-network
    restart: unless-stopped
    labels:
      # Labels for future Traefik migration
      - "app.service=frontend"
      - "app.subdomain=www"
      - "app.port=80"
      - "app.environment=${NODE_ENV:-production}"

volumes:
  postgres_data:
  caddy_data:
  caddy_config:

networks:
  beermachine-network:
    driver: bridge
