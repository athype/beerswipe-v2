version: '3.8'

services:
  # PostgreSQL Database (Production)
  postgres:
    image: postgres:15-alpine
    container_name: beermachine_prod_db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - beermachine-network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: ${BEPORT}
      JWT_SECRET: ${JWT_SECRET}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      FEURL: ${FEURL}
      FEPORT: ${FEPORT}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - postgres
    ports:
      - "${BEPORT}:${BEPORT}"
    networks:
      - beermachine-network
    restart: unless-stopped
    volumes:
      - ./backend/uploads:/app/uploads

  # Frontend Web App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: ${BEURL}
        VITE_API_PORT: ${BEPORT}
    depends_on:
      - backend
    ports:
      - "80:80"
    networks:
      - beermachine-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  beermachine-network:
    driver: bridge
