version: '3.8'

services:
  # PostgreSQL Database (Development)
  postgres:
    image: postgres:15-alpine
    container_name: beermachine_dev_db
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_NAME:-beermachine}
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - beermachine-network
    restart: unless-stopped

  # Backend API (Development with PostgreSQL)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: beermachine_dev_backend
    environment:
      NODE_ENV: development
      PORT: ${BEPORT:-8080}
      JWT_SECRET: ${JWT_SECRET:-dev-secret-key}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-beermachine}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      FEURL: ${FEURL:-http://localhost:5173}
      FEPORT: ${FEPORT:-5173}
    ports:
      - "${BEPORT:-8080}:${BEPORT:-8080}"
    depends_on:
      - postgres
    networks:
      - beermachine-network
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/uploads:/app/uploads
    command: ["pnpm", "dev"]

  # Frontend Web App (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: beermachine_dev_frontend
    environment:
      VITE_API_URL: ${BEURL:-http://localhost:8080/api/v1}
      VITE_API_PORT: ${BEPORT:-8080}
    depends_on:
      - backend
    ports:
      - "5173:5173"
    networks:
      - beermachine-network
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: ["pnpm", "dev", "--host"]

volumes:
  postgres_dev_data:

networks:
  beermachine-network:
    driver: bridge
